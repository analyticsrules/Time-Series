
############   FORECASTS USING EXPONENTIAL SMOOTHING     #########################

#Exponential smoothing is used for making short-term forecasts for time-series data

Types of Exponential Smoothing for Single Variable
1. Simple Exponential Smoothing
2. Holt's Exponential Smoothing
3. Holt-Winters Exponential Smoothing
4. ARIMA


##########   1. Simple Exponential Smoothing    #######################

 #If you have a time series that can be described using an additive model with constant level (trend) and no seasonality, you
 #can use simple exponential smoothing to make short-term forecasts.

 #The simple exponential smoothing method provides a way of estimating the level at the current time point.
 #Smoothing is controlled by the parameter alpha; for the estimate of the level at the current time point. The
 #value of alpha; lies between 0 and 1. Values of alpha that are close to 0 mean that little weight is placed on the
 #most recent observations when making forecasts of future values.

rain <- scan("http://robjhyndman.com/tsdldata/hurst/precip1.dat",skip=1)
 #This dataset contains total annual rainfall in inches for London, from 1813-1912

rainTS = ts(rain, start = c(1813))
plot.ts(rainTS)
 #We can see that random fluctuation in time-series is roughly constant hence we can describe it using additive model
 #THus we can make forecasts using simple exponential smoothing

 #We use HoltWinters() fn to make forecasts on time-series using simple exponential smoothing
rainTSforecasts = HoltWinters(rainTS, beta=FALSE, gamma=FALSE)
 #Since 1st value is 23.56 (inches) rainfall in 1813, we can write it using l.start (L-start)
 #rainTSforecasts = HoltWinters(rainTS, beta=FALSE, gamma=FALSE, l.start=23.56)
rainTSforecasts
 #Here alpha=0.024 which is close to zero means forecasts is based on non-recent observation

 #By default, HoltWinters() fn makes the forecast for same date as original dataset i.e. 1813-1912 and this forecast
 #is saved in $fitted variable of HoltWinters 
rainTSforecasts$fitted

 #Plotting original time-series against forecasts, red line is forecasts. black line is original time-series
plot(rainTSforecasts)

 #We can calculate the accuracy of forecasts using SSE
rainTSforecasts$SSE


 #Since HoltWinters makes forecaste for the same period as original time-series, we can make forecast for further
 #date using forecaste package
library(forecast)
rainTSforecasts2 = forecast.HoltWinters(rainTSforecasts, h=8)
rainTSforecasts2
 #Here we're making forecast for 8 nex years i.e. 1913-1920 with 80% 95% prediction interval

plot.forecast(rainTSforecasts2)
 #Blue line prediction for 1913-1920. Blue shaded area is 80% prediction and 95% interval is grey shaded area


## CHECKING THE IN-SAMPLE ERROR I.E. SSE

 #if there are correlations between forecast errors for successive predictions, it is likely that the simple exponential 
 #smoothing forecasts could be improved upon by another forecasting technique.

 #To figure out whether this is the case, we can obtain a correlogram of the in-sample forecast errors for lags 1-20.
 #We can calculate a correlogram of the forecast errors using the “acf()” function in R for lags 1-20
acf(rainTSforecasts2$residuals, lag.max=20)

 #You can see from the sample correlogram that the autocorrelation at lag 3 is just touching the significance bounds.
 #To test whether there is significant evidence for non-zero correlations at lags 1-20, we can carry out a Ljung- Box test.
Box.test(rainTSforecasts2$residuals, lag=20, type="Ljung-Box")

#Here the Ljung-Box test statistic is 17.4, and the p-value is 0.6, so there is little evidence of non-zero autocorrelations
#in the in-sample forecast errors at lags 1-20.


 #To be sure that the predictive model cannot be improved upon, it is also a good idea to check whether the forecast
 #errors are normally distributed with mean zero and constant variance.
plot(rainTSforecasts2$residuals)

 #The plot shows that the in-sample forecast errors seem to have roughly constant variance over time although the size of 
 #the fluctuations in the start of the time series (1820-1830) may be slightly less than that at later dates (eg.1840-1850).



 #To check whether the forecast errors are normally distributed with mean zero, we can plot a histogram of the forecast
 #errors, with an overlaid normal curve that has mean zero and the same standard deviation as the distribution
 #of forecast errors. To do this, we can define an R function “plotForecastErrors()”, below:
plotForecastErrors <- function(forecasterrors)
{
  # make a histogram of the forecast errors:
  mybinsize <- IQR(forecasterrors)/4
  mysd <- sd(forecasterrors)
  mymin <- min(forecasterrors) - mysd*5
  mymax <- max(forecasterrors) + mysd*3
  # generate normally distributed data with mean 0 and standard deviation mysd
  mynorm <- rnorm(10000, mean=0, sd=mysd)
  mymin2 <- min(mynorm)
  mymax2 <- max(mynorm)
  if (mymin2 < mymin) { mymin <- mymin2 }
  if (mymax2 > mymax) { mymax <- mymax2 }
  # make a red histogram of the forecast errors, with the normally distributed data overlaid:
  mybins <- seq(mymin, mymax, mybinsize)
  hist(forecasterrors, col="red", freq=FALSE, breaks=mybins)
  # freq=FALSE ensures the area under the histogram = 1
  # generate normally distributed data with mean 0 and standard deviation mysd
  myhist <- hist(mynorm, plot=FALSE, breaks=mybins)
  # plot the normal curve as a blue line on top of the histogram of forecast errors:
  points(myhist$mids, myhist$density, type="l", col="blue", lwd=2)
}

plotForecastErrors(rainTSforecasts2$residuals)
 #The plot shows that the distribution of forecast errors is roughly centred on zero, and is more or less normally
 #distributed, although it seems to be slightly skewed to the right compared to a normal curve. However, the right
 #skew is relatively small, and so it is plausible that the forecast errors are normally distributed with mean zero.
 
 
 
 
##########   2. Holt Exponential Smoothing    ####################### 
 #If you have a time series that can be described using an additive model with increasing or decreasing trend and no
 #seasonality, you can use Holt’s exponential smoothing to make short-term forecasts.

skirts = scan("http://robjhyndman.com/tsdldata/roberts/skirts.dat", skip=5)
#Dataset of skirt size from 1866-1911

skirtsTS = ts(skirts, start=c(1866))
plot.ts(skirtsTS)

 #To make forecasts, we can fit a predictive model using the HoltWinters() fn in R and put gamma=FALSE. gamma used for smoothing
skirtsTSforecasts = HoltWinters(skirtsTS, gamma=FALSE)

skirtsTSforecasts
 #Here we see that alpha=0.84, beta=1. These are both high, telling us that both the estimate of the current value of the
 #level, and of the slope b of the trend component, are based mostly upon very recent observations in the time series.

skirtsTSforecasts$SSE

plot(skirtsTSforecasts)
 #Original time series (black line) & forecsted time series

 #you can specify the initial values of the level and the slope b of the trend component by using the
 #“l.start” and “b.start” arguments for the HoltWinters() function.
skirtsTSforecasts = HoltWinters(skirtsTS, gamma=FALSE, l.start=608, b.start=9)

 #Making forecast for next 19 years using forecast package for 1912-1930
skirtsTSforecasts2 = forecast.HoltWinters(skirtsTSforecasts, h=19)

plot.forecast(skirtsTSforecasts2)
 #Forecasts is shown as blue line. blue shaded area as 80% prediction interval; grey shaded for 95% pred interval

 #As for simple exponential smoothing, we can check whether the predictive model could be improved upon by
 #checking whether the in-sample forecast errors show non-zero autocorrelations at lags 1-20 using Ljung-Box test
#For example, for the skirt hem data, we can make a correlogram, and carry out the Ljung-Box test, by typing:
acf(skirtsTSforecasts2$residuals, lag.max=20)

Box.test(skirtsTSforecasts2$residuals, lag=20, type="Ljung-Box")
 #Here the correlogram shows that the sample autocorrelation for the in-sample forecast errors at lag 5 exceeds the
 #significance bounds. However, we would expect one in 20 of the autocorrelations for the first twenty lags to  #exceed the
 #95% significance bounds by chance alone. Indeed, when we carry out the Ljung-Box test, the p-value  #is 0.47, indicating
 #that there is little evidence of non-zero autocorrelations in the in-sample forecast errors at lags 1-20.



 #As for simple exponential smoothing, we should also check that the forecast errors have constant variance over
 #time, and are normally distributed with mean zero. We can do this by making a time plot of forecast errors, and a
 #histogram of the distribution of forecast errors with an overlaid normal curve:

plot.ts(skirtsTSforecasts2$residuals)  #Make a time plot
plotForecastErrors(skirtsTSforecasts2$residuals)  #Make a histogram
 #The time plot of forecast errors shows that the forecast errors have roughly constant variance over time. The
 #histogram of forecast errors show that it is plausible that the forecast errors are normally distributed with mean
 #zero and constant variance.

 #Thus, the Ljung-Box test shows that there is little evidence of autocorrelations in the forecast errors, while the
 #time plot and histogram of forecast errors show that it is plausible that the forecast errors are normally distributed
 #with mean zero and constant variance.





#############   3. Holt-Winters Exponential Smoothing      ################################

#If you have a time series that can be described using an additive model with increasing or decreasing trend and
#seasonality, you can use Holt-Winters exponential smoothing to make short-term forecasts.

#Holt-Winters exponential smoothing estimates the level, slope and seasonal component at the current time point.
#Smoothing is controlled by three parameters: alpha, beta, and gamma, for the estimates of the level, slope b of
#the trend component, and the seasonal component, respectively, at the current time point. The parameters alpha,
#beta and gamma all have values between 0 and 1, and values that are close to 0 mean that relatively little weight is
#placed on the most recent observations when making forecasts of future values.


LOGSouvenirTS = log(souvenirTS)
souvenirTSforecasts = HoltWinters(LOGSouvenirTS)

souvenirTSforecasts
 #The estimated values of alpha, beta and gamma are 0.41, 0.00, and 0.96, respectively. The value of alpha (0.41)is 
 #relatively low, indicating that the estimate of the level at the current time point is based upon both recent
 #observations and some observations in the more distant past. The value of beta is 0.00, indicating that the estimate
 #of the slope b of the trend component is not updated over the time series, and instead is set equal to its initial value

souvenirTSforecasts$SSE

plot(souvenirTSforecasts)

 #FOrecasting the time series for next 48 years
souvenirTSforecasts2 = forecast.HoltWinters(souvenirTSforecasts, h =48)
plot.forecast(souvenirTSforecasts2)



 #We can investigate whether the predictive model can be improved upon by checking whether the in-sample forecast
 #errors show non-zero autocorrelations at lags 1-20,by making a correlogram and carrying out the Ljung-Box test:
acf(souvenirTSforecasts2$residuals, lag.max=20)

Box.test(souvenirTSforecasts2$residuals, lag=20, type="Ljung-Box")
 #The correlogram shows that the autocorrelations for the in-sample forecast errors do not exceed the significance
 #bounds for lags 1-20. Furthermore, the p-value for Ljung-Box test is 0.6, indicating that there is little evidence of
 #non-zero autocorrelations at lags 1-20.


 #We can check whether the forecast errors have constant variance over time, and are normally distributed with
 #mean zero, by making a time plot of the forecast errors and a histogram (with overlaid normal curve):
plot.ts(souvenirTSforecasts2$residuals)  #make a time plot
plotForecastErrors(souvenirTSforecasts2$residuals) 

 #From the time plot, it appears plausible that the forecast errors have constant variance over time. From the
 #histogram of forecast errors, it seems plausible that the forecast errors are normally distributed with mean zero.

 #Thus,there is little evidence of autocorrelation at lags 1-20 for the forecast errors, and the forecast errors appear
 #to be normally distributed with mean zero and constant variance over time. This suggests that Holt-Winters
 #exponential smoothing provides an adequate predictive model of the log of sales at the souvenir shop, which
 #probably cannot be improved upon. Furthermore, the assumptions upon which the prediction intervals were based
 #are probably valid.
